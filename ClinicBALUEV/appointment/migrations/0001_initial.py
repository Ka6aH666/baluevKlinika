# Generated by Django 5.1.1 on 2024-11-02 11:19

import datetime

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AppointmentRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("id_request", models.CharField(blank=True, max_length=100, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Config",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slot_duration",
                    models.PositiveIntegerField(
                        help_text="Minimum time for an appointment in minutes, recommended 30.",
                        null=True,
                    ),
                ),
                (
                    "lead_time",
                    models.TimeField(
                        help_text="Time when we start working.", null=True
                    ),
                ),
                (
                    "finish_time",
                    models.TimeField(help_text="Time when we stop working.", null=True),
                ),
                (
                    "appointment_buffer_time",
                    models.FloatField(
                        help_text="Time between now and the first available slot for the current day (doesn't affect tomorrow).",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "duration",
                    models.DurationField(
                        validators=[
                            django.core.validators.MinValueValidator(
                                datetime.timedelta(seconds=1)
                            )
                        ]
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=8,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="services/"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_request", models.CharField(blank=True, max_length=100, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "client",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "appointment_request",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="appointment.appointmentrequest",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="appointmentrequest",
            name="service",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="appointment.service"
            ),
        ),
        migrations.CreateModel(
            name="StaffMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slot_duration",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="(Количество слотов доступных для записи к данному работнику, день будет разбит на промежутки по установленному количеству минут)",
                        null=True,
                    ),
                ),
                (
                    "lead_time",
                    models.TimeField(
                        blank=True, help_text="Время начала рабочего дня", null=True
                    ),
                ),
                (
                    "finish_time",
                    models.TimeField(
                        blank=True, help_text="Время конца рабочего дня", null=True
                    ),
                ),
                (
                    "appointment_buffer_time",
                    models.FloatField(
                        blank=True,
                        help_text="Время между текущим моментом и первым доступным интервалом на текущий день (не влияет на завтра)",
                        null=True,
                    ),
                ),
                ("services_offered", models.ManyToManyField(to="appointment.service")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DayOff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "staff_member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="appointment.staffmember",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="appointmentrequest",
            name="staff_member",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="appointment.staffmember",
            ),
        ),
        migrations.CreateModel(
            name="WorkingHours",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day_of_week",
                    models.PositiveIntegerField(
                        choices=[
                            (0, "Sunday"),
                            (1, "Monday"),
                            (2, "Tuesday"),
                            (3, "Wednesday"),
                            (4, "Thursday"),
                            (5, "Friday"),
                            (6, "Saturday"),
                        ]
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                (
                    "staff_member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="appointment.staffmember",
                    ),
                ),
            ],
        ),
    ]
